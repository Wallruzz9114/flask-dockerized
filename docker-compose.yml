# This config will create a service called api from the Dockerfile.

# The volume is used to mount the code into the container.
# This is a must for a development environment in order to update the container
# whenever a change to the source code is made. Without this,
# you would have to re-build the image each time you make a change to the code.

# Take note of the Docker compose file version used -- 3.8.
# Keep in mind that this version does not directly relate back
# to the version of Docker Compose installed; it simply specifies
# the file format that you want to use.

version: "3.8"

services:
  api:
    build:
      context: ./services/users
      dockerfile: Dockerfile
    entrypoint: ["/usr/src/app/entrypoint.sh"]
    volumes:
      - "./services/users:/usr/src/app"
    ports:
      - 5004:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=src.config.DevelopmentConfig
      - DATABASE_URL=postgresql://postgres:postgres@api-db:5432/api_dev
      - DATABASE_TEST_URL=postgresql://postgres:postgres@api-db:5432/api_test
    depends_on:
      - api-db

  api-db:
    build:
      context: ./services/users/src/db
      dockerfile: Dockerfile
    expose:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  website:
    stdin_open: true
    build:
      context: ./services/website
      dockerfile: Dockerfile
    volumes:
      - "./services/website:/usr/src/app"
      - "/usr/src/app/node_modules"
    ports:
      - 3007:3000
    environment:
      - NODE_ENV=development
      - REACT_APP_API_SERVICE_URL=${REACT_APP_API_SERVICE_URL}
    depends_on:
      - api
